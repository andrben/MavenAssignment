<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="5912" started-at="2023-04-23T07:19:06Z" finished-at="2023-04-23T07:19:12Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="5912" started-at="2023-04-23T07:19:06Z" finished-at="2023-04-23T07:19:12Z">
      <class name="testcases.LoginTest">
        <test-method status="PASS" signature="ReportSetup()[pri:0, instance:testcases.LoginTest@5891e32e]" name="ReportSetup" is-config="true" duration-ms="500" started-at="2023-04-23T07:19:06Z" finished-at="2023-04-23T07:19:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportSetup -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@5891e32e]" name="SetUp" is-config="true" duration-ms="1380" started-at="2023-04-23T07:19:06Z" finished-at="2023-04-23T07:19:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.LoginNegative(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="LoginNegative(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@5891e32e]" name="LoginNegative" duration-ms="1490" started-at="2023-04-23T07:19:08Z" finished-at="2023-04-23T07:19:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.LoginNegative(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginNegative -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testcases.LoginTest@5891e32e]" name="TearDown" is-config="true" duration-ms="71" started-at="2023-04-23T07:19:09Z" finished-at="2023-04-23T07:19:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="SetUp(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@5891e32e]" name="SetUp" is-config="true" duration-ms="1025" started-at="2023-04-23T07:19:09Z" finished-at="2023-04-23T07:19:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.LoginPositive(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SetUp -->
        <test-method status="PASS" signature="LoginPositive(java.lang.reflect.Method)[pri:0, instance:testcases.LoginTest@5891e32e]" name="LoginPositive" duration-ms="1362" started-at="2023-04-23T07:19:10Z" finished-at="2023-04-23T07:19:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testcases.LoginTest.LoginPositive(java.lang.reflect.Method) throws com.codoid.products.exception.FilloException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginPositive -->
        <test-method status="PASS" signature="TearDown()[pri:0, instance:testcases.LoginTest@5891e32e]" name="TearDown" is-config="true" duration-ms="68" started-at="2023-04-23T07:19:12Z" finished-at="2023-04-23T07:19:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method status="PASS" signature="ReportClean()[pri:0, instance:testcases.LoginTest@5891e32e]" name="ReportClean" is-config="true" duration-ms="1" started-at="2023-04-23T07:19:12Z" finished-at="2023-04-23T07:19:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReportClean -->
      </class> <!-- testcases.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
